<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>剑指 Offer 04. 二维数组中的查找</title>
      <link href="/2021/09/01/leetcode3/"/>
      <url>/2021/09/01/leetcode3/</url>
      
        <content type="html"><![CDATA[<h2 id="PROBLEM"><a href="#PROBLEM" class="headerlink" title="PROBLEM"></a>PROBLEM</h2><p>剑指 Offer 04. 二维数组中的查找</p><p><a href="https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/">https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/</a></p><p>难度 中等</p><h2 id="MY-ANSWER"><a href="#MY-ANSWER" class="headerlink" title="MY ANSWER"></a>MY ANSWER</h2><p>相当于二叉搜索树。从右上角开始遍历，若值比target大则向左走，若小则向下走，无路可走时说明没有该整数，返回false。注意设置 j 初值时要考虑空矩阵的判断，否则过不了。时间复杂度O(n+m)，空间复杂度O(1)。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">findNumberIn2DArray</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = matrix.<span class="built_in">size</span>() ? matrix[<span class="number">0</span>].<span class="built_in">size</span>() - <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; matrix.<span class="built_in">size</span>() &amp;&amp; j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j] == target) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j] &gt; target) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="BETTER-SOLUTION"><a href="#BETTER-SOLUTION" class="headerlink" title="BETTER SOLUTION"></a>BETTER SOLUTION</h2><p>思路相同，只不过从左下角开始遍历，好处是设置 i 初值时不需要判断空矩阵，耗时会少点。时间复杂度O(n+m)，空间复杂度O(1)。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">findNumberIn2DArray</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = matrix.<span class="built_in">size</span>() - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &gt;= <span class="number">0</span> &amp;&amp; j &lt; matrix[<span class="number">0</span>].<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j] &gt; target) i--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(matrix[i][j] &lt; target) j++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="SUMMARY"><a href="#SUMMARY" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><p><strong>根据题目条件将矩阵抽象为二叉搜索树解决问题，解题时注意0值和边界判断。</strong>这题还尝试了用bfs解决，但时间过不了。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指 Offer 03. 数组中重复的数字</title>
      <link href="/2021/09/01/leetcode2/"/>
      <url>/2021/09/01/leetcode2/</url>
      
        <content type="html"><![CDATA[<h2 id="PROBLEM"><a href="#PROBLEM" class="headerlink" title="PROBLEM"></a>PROBLEM</h2><p>剑指 Offer 03. 数组中重复的数字</p><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/">https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/</a></p><p>难度 简单</p><h2 id="MY-ANSWER"><a href="#MY-ANSWER" class="headerlink" title="MY ANSWER"></a>MY ANSWER</h2><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><p>使用哈希表来实现类似桶排序的方法。先查询表中有无该数，若有则返回，若无则放入表中。时间复杂度O(n)，空间复杂度O(n)。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; hashtable;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">auto</span> it = hashtable.<span class="built_in">find</span>(nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(it != hashtable.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                hashtable[nums[i]] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="BETTER-SOLUTION"><a href="#BETTER-SOLUTION" class="headerlink" title="BETTER SOLUTION"></a>BETTER SOLUTION</h2><h3 id="原地交换"><a href="#原地交换" class="headerlink" title="原地交换"></a>原地交换</h3><p>充分利用题目条件<strong>在一个长度为 n 的数组 nums 里的所有数字都在 0 ~ n-1 的范围内</strong>。可遍历数组并通过交换操作，使元素的 <strong>索引</strong> 与 <strong>值</strong> 一一对应。索引从0开始遍历，先判断索引与值是否相等，是则i++检查下一个索引，否则将当前索引的值与同值的索引的值进行交换，交换到索引与值相等为止。当前索引的值与同值的索引的值相等时，则说明找到了重复的数字，将其返回。时间复杂度O(n)，空间复杂度O(1)。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; nums.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] == i) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nums[nums[i]] == nums[i])</span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line">            <span class="built_in">swap</span>(nums[i],nums[nums[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="SUMMARY"><a href="#SUMMARY" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><p>用到了哈希表，没能做进一步的思考减少复杂度。牢记：<strong>题目给出的条件都是要派上用场的，充分利用好题目条件才能得到更优的答案，利用原地交换将值与索引对应，降低空间复杂度。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解 1.两数之和</title>
      <link href="/2021/08/31/leetcode1/"/>
      <url>/2021/08/31/leetcode1/</url>
      
        <content type="html"><![CDATA[<p>今天得到高人指点迷津。故从今天开始刷题，先来第一题体验一下。</p><h2 id="PROBLEM"><a href="#PROBLEM" class="headerlink" title="PROBLEM"></a>PROBLEM</h2><p>1.两数之和</p><p><a href="https://leetcode-cn.com/problems/two-sum/">https://leetcode-cn.com/problems/two-sum/</a></p><p>难度 简单</p><h2 id="MY-ANSWER"><a href="#MY-ANSWER" class="headerlink" title="MY ANSWER"></a>MY ANSWER</h2><h3 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h3><p>两个for搞定，时间复杂度O（n^2)，空间复杂度O（1）。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; nums.<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] + nums[j] == target) &#123;</span><br><span class="line">                    a = i;</span><br><span class="line">                    b = j;</span><br><span class="line">                    tmp.<span class="built_in">push_back</span>(a);</span><br><span class="line">                    tmp.<span class="built_in">push_back</span>(b);</span><br><span class="line">                    <span class="keyword">return</span> tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="BETTER-SOLUTION"><a href="#BETTER-SOLUTION" class="headerlink" title="BETTER SOLUTION"></a>BETTER SOLUTION</h2><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><p>空间换时间，对于每一个 <code>x</code>，首先查询哈希表中是否存在 <code>target - x</code>，然后将 <code>x</code> 插入到哈希表中。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; hashtable;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">            <span class="keyword">auto</span> it = hashtable.<span class="built_in">find</span>(target - nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (it != hashtable.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;it-&gt;second, i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            hashtable[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>时间复杂度O（n)，空间复杂度O（n）。</p><h2 id="SUMMARY"><a href="#SUMMARY" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><p>热手题目，太久没写，哈希表都没想出来。牢记：<strong>空间换时间，查询可以通过哈希表来降低复杂度，解题时多注意数据结构的设计</strong>。另外发现自己对STL了解不多，得多学习熟悉一下加快打码速度，毕竟写了快两年C，CPP快忘光了。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暑假小结</title>
      <link href="/2021/08/29/vacation/"/>
      <url>/2021/08/29/vacation/</url>
      
        <content type="html"><![CDATA[<p>暑假的最后一周在忙碌的学生助理工作中结束，周末想着给大号上个钻，结果死活打不上去，选择摆烂了。虽然暑假基本没干啥事，不过还是简单写个小结吧。</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>700页的教材，看了150页，算是意料之中。听说数据库老师有点逆天，已经做好看教材自学的准备了。</p><h2 id="C-与U3D"><a href="#C-与U3D" class="headerlink" title="C#与U3D"></a>C#与U3D</h2><p>C#在看菜鸟教程进行粗略学习，未进行实操。U3D在跟着缓慢更新的坛友教程学习，也未进行实操，纯纯的摆烂人了属于是。甩锅给前不久才有钱买的ssd，给笔记本装上以后才不用担心C盘大小和总空间的问题。现在C盘250，D盘500，应该够用了吧。为此把系统重装了，环境需要慢慢重新配置，总算可以装VS了。</p><h2 id="梯子"><a href="#梯子" class="headerlink" title="梯子"></a>梯子</h2><p>算是被vultr给骗了，首充优惠送的余额一个月就过期，相当于免费送一个月梯子。3.5刀一个月实在有点贵，等余额用完后再考虑怎么搞吧。</p><h2 id="戒网瘾"><a href="#戒网瘾" class="headerlink" title="戒网瘾"></a>戒网瘾</h2><p>下定决心远离竞技类游戏了，得把时间专注于学习上，偶尔的101开黑、画画、aimlab、osu啥的可以保留一下。</p><h2 id="新学期计划"><a href="#新学期计划" class="headerlink" title="新学期计划"></a>新学期计划</h2><ul><li>教材和ppt的阅读尽量跟上上课进度</li><li>课余进行U3D相关学习</li><li>多跑步多锻炼，保持充足睡眠</li></ul><p>最后用最爱的水母之歌做结尾吧！</p><blockquote><p>D⊂≈≈≈≈ D⊂≈≈≈≈ D⊂≈≈≈≈</p><p>水母 水母<br>随波逐流的生物<br>等一个短暂的停驻<br>逐渐 领悟<br>缓慢弥补的脚步<br>总会找到<br>归属</p><p>D⊂≈≈≈≈ D⊂≈≈≈≈ D⊂≈≈≈≈</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 暑假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7月小记</title>
      <link href="/2021/08/03/july/"/>
      <url>/2021/08/03/july/</url>
      
        <content type="html"><![CDATA[<h2 id="期末"><a href="#期末" class="headerlink" title="期末"></a>期末</h2><p>7月上旬首先是考试周，第一周七门，第二周周二考一学期没学的系统分析与设计。基本每天熬得挺晚的，平时没学好只能考前抱抱佛脚了。考完成绩也不出意外，只能说是差强人意。有几科还行，有几科因为瞎写作业平时分炸了，总的来说比上学期进步一点点。</p><h2 id="搭梯子和博客"><a href="#搭梯子和博客" class="headerlink" title="搭梯子和博客"></a>搭梯子和博客</h2><p>考完干的两件事就是把梯子和个人博客搭了起来，主要参考了：</p><ul><li><a href="https://www.itblogcn.com/article/406.html">https://www.itblogcn.com/article/406.html</a></li><li><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2</a></li><li><a href="https://blog.csdn.net/wapchief/article/details/54602515">https://blog.csdn.net/wapchief/article/details/54602515</a></li></ul><p>有了VPS后就不用担心VPN供应商跑路了，还能三端科学上网，价格便宜。博客用的butterfly主题，挺好看的，配置也很多，以后慢慢美化和完善吧。</p><h2 id="学生助理"><a href="#学生助理" class="headerlink" title="学生助理"></a>学生助理</h2><p>暑假留校，去应聘了校内系科院的学生助理，赚点零花钱。一周就上几天班，也不算特别忙，空余时间正好留来学习与娱乐。七月中旬开始到月底，上了40+个小时班，25一个小时，也有1000块，考虑到时拿钱买把入门面单吉他吧。</p><h2 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h2><p>纠结了挺久的暑假该学些什么，也咨询过师兄，大致了解了几个大方向前端、后端、客户端，每个大方向又有细化的小方向。由于下学期有些课可以学一下这些小方向看看感觉如何，所以暂时决定还是先学下下学期的专必课，买了数据库的教材，准备这个暑假能看多少是多少。下学期为了修完学分给大三下腾出时间去实习，课挺多的，提前学也许能减轻一下负担吧。</p><p>在七月的最后几天，看到了朝夕光年的招聘：</p><p><img src="https://i.loli.net/2021/08/03/F1VGLDUktmKIRbp.jpg" alt="fc9a9428c11ef1b203cbfc2afbf15b2.jpg"></p><p>我就在想，这是不是我一直想要找到的目标。进入大学后，一直没啥目标，因此学习也没啥动力，总是感到迷茫，不知道该干些什么，把时间都耗费在游戏中，虽然是获得了快乐，但快乐后还是迷茫。看到这个招聘，我审视了一下自己。有知名985背景，学习的是相关的专业，甚至下学期就有U3D的课。这个目标，并不算是太过于遥远。虽然这是社招，要达成这个目标，至少也得三四年后，那时候A-SOUL还在不在也不好说，但是最重要的是，至少在现在能为这个目标去努力。即使进入不了A-SOUL项目，学习的U3D也足以去大部分的公司了。身为这么喜欢游戏的一个人，对于游戏开发，我想应该也不会反感吧。我决定我的技术方向就选在U3D开发了，这可能是这个七月我最大的收获吧。</p><h2 id="8月计划"><a href="#8月计划" class="headerlink" title="8月计划"></a>8月计划</h2><p>深知计划赶不上变化，所以干脆就随便列一下吧：</p><ul><li>继续读《数据库系统概念》；</li><li>找好U3D的教材、教程等，开始初步的学习；</li></ul><p>距离大三下参加春招实习招聘还有半年的时间，说少不少说多不多，希望能把握住这个暑假的8月吧。</p><p>最后用晚晚最新原创曲来给七月小记做结尾吧：</p><blockquote><p>I know you would come，no matter how hard it is. （我相信你会过来，纵有移山填海之难）</p><p> I remember that song，and your smiling faces. （犹记欢唱一曲，你亦笑逐颜开） </p><p>I wont bother，I am not the extra one though. （我从不会纠结，自己是否亏欠） </p><p>You come to me this summer at first time，but I felt we have met before. （夏天初遇已如故，向你说相见恨晚）</p><p>Life is full of regrets，I never mean to ignore all those happy memories. （人生坎坷不罕见，休忘温馨常回念） </p><p>But you are here with me，so I wont cry . （若你信你在，便无泣无怨） </p><p>We will be all right this time!（我们定会无恙安然！） </p><p>I wash it away，you erase those memories. （我会让它随风去，也请你忘掉不快） </p><p>I wash it away，you erase those memories. （我已让它随风去，也等你忘掉不快） </p><p>Until the day，only happiness left in my mind. （到了那天，皆剩幸福留在脑海）</p></blockquote><p>可能一辈子都忘不掉这个在天台上给我们弹吉他唱歌的女孩吧</p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 暑假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first post</title>
      <link href="/2021/07/25/first-post/"/>
      <url>/2021/07/25/first-post/</url>
      
        <content type="html"><![CDATA[<p>不推嘉然小姐十年了。</p><p>她的名气和出场费都一涨再涨，我原地踏步的工资买不上专辑也打不起榜。终于年前被公司安排下岗，找工作时我才在路边广告发现初代工具人已经当上了厂长。<br>时间太久，一切都变了。</p><p>到处投简历的时候我想起了一名人上人的预言：“这些人只配在下水道里度过相对比较失败的人生。”<br>像是一条跳过龙门的锦鲤，金鳞被羽耀武扬威地站在门沿上，对其他还在跳的鲤鱼说：<br>“你不行！”<br>我当时很想反驳，可他说中了。<br>我知道我确实不行。我之所以跳了跳，只是为了看下自己能跳成什么样罢了。<br>其实每条鲤鱼的龙门都不是一样高的。<br>我见过龙门在水下的鲤鱼。看起来是鱼，其实生而为龙。<br>也有的生而为鱼肉。<br>也见过好运的鲤鱼，门被各种大手摁到河里了。<br>我也期待过好运，只是没来而已。<br>说起来这就是人性吧。我不讨厌天道酬勤，但是讨厌别人的好运——只是因为我没有好运罢了。<br>我也有亲人和宠物会生病；我眼神也挺纯真啊。</p><p>讨厌嘉然小姐十年了。<br>讨厌的更是越来越深的无力感。<br>身在泥潭的人是没力气冲锋的吧。<br>三流的人生只会让上等人不屑一顾吧。<br>我坐井观天，天穹星海依然耀眼。<br>可我爬不出井底。<br>那我就不再看星星了。世界那么大，但没我的份。</p><p>忘记嘉然小姐十年了。<br>可路上看见街边的大荧幕在放A-soul的新年节目，我还是楞在那里了。<br>我没有近视，但总觉得眼睛影影绰绰，雾气来自多年以前。<br>这个广告位非常贵。真的再也不是小v了啊。<br>抖友还在惦记他们的鸭子。<br>晚晚仍然只有蓬蓬裙，100首歌竟然还欠着，被粉头小团体以4%年化复利计在小本子了。<br>想起她首播时玩2077下饭下得轰轰烈烈，我一边发“粉丝牌改成晚饭人吧”<br>“和嘉然珈乐凑加碗饭”<br>“和乃琳凑来碗饭”一边忍住刷“和贝拉组拉碗饭”的冲动。<br>solo依然拉跨，参团照旧神C。<br>贝拉总是六边形战士，乃琳养了成吨的gachi，珈乐还是那个硬壳软妹。<br>嘉然小姐依然卖萌摁混。<br>什么都没变，是我没跟上她们。<br>城里烟火幢幢，灯光下的人热情相拥，阴影里的人压下悸动。</p><p>最亮的地方嘉然小姐浅笑起舞，光影从她袖间散落，像是雨天花伞轻旋，摇曳间洒下泪色的流珠。<br>忽然眼睛有点模糊。<br>我小声说：<br>“新年好啊，嘉然小姐。”</p><p>不爱嘉然小姐十年了。<br>十年里，爱过的每个人都像她。</p>]]></content>
      
      
      <categories>
          
          <category> A-SOUL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> A-SOUL </tag>
            
            <tag> 发病 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
